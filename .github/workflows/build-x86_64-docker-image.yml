name: X86_64 Docker Image

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 4 * * *

env:
  PREFIX_URL: https://openwrt.cc/releases/targets
  TARGET: x86
  SUBTARGET: 64
  PLATFORM: x86_64
  ARCH: linux/amd64
  CLASH_ARCH: amd64
  IMAGE_TAG: x86_64

jobs:
  Publish:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)

    - name: Set Up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set Up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login To DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PWD }}

    - name: Login To Alibaba Cloud Container Registry
      run: |
        docker login -u ${{ secrets.ALIYUN_USERNAME }} -p ${{ secrets.ALIYUN_PWD }} registry.cn-shanghai.aliyuncs.com

    - name: Download Image Builder
      run: |
        wget -q $PREFIX_URL/$TARGET/$SUBTARGET/openwrt-imagebuilder-$TARGET-$SUBTARGET.Linux-x86_64.tar.xz
        wget -q https://raw.githubusercontent.com/coolsnowwolf/lede/master/package/lean/autocore/files/arm/index.htm -O ./data/etc/index.htm

    - name: Load Custom Configuration 
      run: |
        sed -i "s/subtarget/$SUBTARGET/g" data/etc/opkg/distfeeds.conf
        sed -i "s/target\//$TARGET\//g" data/etc/opkg/distfeeds.conf
        sed -i "s/platform/$PLATFORM/g" data/etc/opkg/distfeeds.conf
        tar -xJf *.tar.xz
        cd openwrt-imagebuilder-$TARGET-$SUBTARGET.Linux-x86_64
        sed -i 's/kmod-/-kmod-/g' include/target.mk
        sed -i 's/kmod-/-kmod-/g' target/linux/$TARGET/Makefile

    - name: Build RootFS
      run: |
        export packages=$(cat ./data/config/x86_64-packages.config)
        cd openwrt-imagebuilder-$TARGET-$SUBTARGET.Linux-x86_64
        make image PACKAGES="$packages"
        cp bin/targets/$TARGET/$SUBTARGET/*rootfs.tar.gz ..

    - name: Build & Push Multiarch Image
      uses: docker/build-push-action@v2
      with:
        platforms: ${{ env.ARCH }}
        file: Dockerfile
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/openwrt:${{ env.IMAGE_TAG }}
          ${{ secrets.DOCKERHUB_USERNAME }}/openwrt:x86_64
          registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:${{ env.IMAGE_TAG }}
          registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:x86_64
